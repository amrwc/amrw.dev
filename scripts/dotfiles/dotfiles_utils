#!/usr/bin/env zsh

# Dotfiles utils
#
# Usage:
# $ source /dev/stdin <<< "$(curl -fsSL amrw.dev/scripts/dotfiles/dotfiles_utils)"
#
# More explicitly to avoid redirect loops:
# $ source /dev/stdin <<< "$(curl -fsSL https://raw.githubusercontent.com/amrwc/amrwc.github.io/master/scripts/zsh_utils)"

# A flag to avoid sourcing the file more than once
readonly IS_IMPORTED_DOTFILES_UTILS=true

if [[ -z "${IS_IMPORTED_DOTFILES_UTILS}" || "${IS_IMPORTED_DOTFILES_UTILS}" != true ]]; then
	source /dev/stdin <<< "$(curl -fsSL https://raw.githubusercontent.com/amrwc/amrwc.github.io/master/scripts/dotfiles/dotfiles_utils)"
fi

######################
# CONSTANTS
######################

readonly BACKUP_DIR_PATH="${HOME}/Downloads/__dotfiles_backup"


######################
# FUNCTIONS
######################

# @param ${1} -- filename
# @param ${2} -- directory path
function backup_dotfile() {
	if [ -f "${2}/${1}" ]; then
		cp "${2}/${1}" "${2}/$(get_date_time)_${1}"
	fi
}

# @param ${1} -- source url; absolute URL to the file
# @param ${2} -- filename
# @param ${3} -- destination directory path
function import_dotfile() {
	backup_dotfile "${2}" "${3}"
	curl -sL "${1}" > "${3}/${2}"
}

# @param ${1} -- source path
# @param ${2} -- destination path
function export_dotfile() {
	if [ -d "${1}" ]; then
		cp -r "${1}" "${2}"
	elif [ -f "${1}" ]; then
		cp "${1}" "${2}"
	fi
}
